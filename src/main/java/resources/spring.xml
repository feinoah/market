<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:flex="http://www.springframework.org/schema/flex"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation=" 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/task   
        http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<!-- For DataSource settings and future properties files -->

	<bean id="configBean"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:resources/dataSource.properties" />
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
	    <!-- 基本属性 url、user、password -->
	    <property name="url" value="${dataSource.url}" />
	    <property name="username" value="${dataSource.username}" />
	    <property name="password" value="${dataSource.password}" />

	    <!-- 配置初始化大小、最小、最大 -->
	    <property name="initialSize" value="1" />
	    <property name="minIdle" value="1" /> 
	    <property name="maxActive" value="15" />

	    <!-- 配置获取连接等待超时的时间 -->
	    <property name="maxWait" value="60000" />

	    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	    <property name="timeBetweenEvictionRunsMillis" value="60000" />

	    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	    <property name="minEvictableIdleTimeMillis" value="300000" />

	    <property name="validationQuery" value="SELECT 'x'" />
	    <property name="testWhileIdle" value="true" />
	    <property name="testOnBorrow" value="false" />
	    <property name="testOnReturn" value="false" />

	    <!-- 配置监控统计拦截的filters  -->
		<!--
	    <property name="filters" value="wall,stat,slf4j" /> 
		-->
		<property name="filters" value="wall" /> 
		
	</bean>

	<!-- DAO -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

	<!-- 定义事务处理类，不同的数据访问方式，事务处理类不同 比如：Hibernate操作的HibernateTransactionManager，JDBC操作的使用DataSourceTransactionManager -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 声明使用注解式事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- Forwards requests to the "/" resource to the "welcome" view -->
	<mvc:view-controller path="/" view-name="index"/>
	<mvc:view-controller path="/loginForm" view-name="loginForm"/>
	<mvc:view-controller path="/partner/loginForm" view-name="partner/loginForm"/>

	<!-- 启用基于注解的处理器映射，添加拦截器，类级别的处理器映射 -->  
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">  
        <property name="interceptors">  
            <list>  
               	<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
				<bean class="cn.com.carit.market.web.interseptor.AdminInterceptor"/>
				<bean class="cn.com.carit.market.web.interseptor.PersonCenterInterceptor"/>
				<bean class="cn.com.carit.market.web.interseptor.PartnerInterseptor"/>
            </list>  
        </property>  
    </bean>  
    <!--   
  	  配置一个基于注解的定制的WebBindingInitializer，解决日期转换问题，方法级别的处理器映射，  
  	  有人说该bean要放在context:component-scan前面，要不然不起作用，但我试的放后面也可以啊。  
  	  配置SpringMVC @ResponseBody和@RequestBody注解
    -->  
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="cacheSeconds" value="0" />  
        <property name="webBindingInitializer">  
            <bean class="cn.com.carit.market.web.interseptor.BindingInitializer" />  
        </property>
        <property name="messageConverters">  
	        <list>  
	            <ref bean="jsonHttpMessageConverter" />  
	        </list>  
    	</property>
    </bean>
  
	<bean id="jsonHttpMessageConverter"  
	    class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
	</bean>  

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/html/**" location="/html/" />
	<!-- 允许直接访问配置文件 -->
	<mvc:resources mapping="/*.properties" location="/" />

	<!-- Saves a locale change using a cookie -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />

	<!-- Application Message Bundle -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:resources/messages/messages" />
		<property name="defaultEncoding" value="UTF-8" />
		<!--① 刷新资源文件的周期，以秒为单位 -->
		<property name="cacheSeconds" value="3600" />
	</bean>

	<!-- Resolves view names to protected .jsp resources within the /WEB-INF/views directory -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

	<!-- 文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 解析request的编码 ，Default is ISO-8859-1 -->
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 设置最大允许的大小(字节)。-1表示没有限制(默认) 1024*1024*10=10MB -->
		<!-- 35M -->
		<property name="maxUploadSize" value="36700160" />
		<!--被允许的最大的内存的大小，Default is 10240 bytes -->
		<property name="maxInMemorySize" value="20480" />
		<!-- 一个类似懒加载的属性.可以定义该属性.让解析文件的时候再抛异常,然后Controller中定义异常处理的方法 -->
		<property name="resolveLazily" value="true" />
	</bean>
	
	<bean id="caritClient" class="cn.com.carit.platform.client.CaritClient">
		<property name="serverUrl" value="http://www.android-in-car.com:8088/router?"/>
		<!-- 
		<property name="serverUrl" value="http://localhost:8088/router?"/>
		 -->
		<property name="appKey" value="1"/>
		<property name="appSecret" value="abcdeabcdeabcdeabcdeabcde"/>
	</bean>

	<context:annotation-config />
	<context:component-scan base-package="cn.com.carit.market" />

</beans>